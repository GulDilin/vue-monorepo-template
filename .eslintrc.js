module.exports = {
  root: true,
  env: {
    browser: true,
    node: true,
    es2022: true,
  },
  extends: [
    'plugin:vue/vue3-recommended',
    'eslint:recommended',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:import/recommended',
    'plugin:import/typescript',
  ],
  parser: 'vue-eslint-parser',
  parserOptions: {
    parser: {
      ts: '@typescript-eslint/parser',
      '<template>': 'espree',
    },
    ecmaVersion: 2022,
  },
  settings: {
    'import/parsers': {
      '@typescript-eslint/parser': ['.ts', '.tsx'],
    },
    'import/resolver': {
      typescript: {
        project: ['tsconfig.json', 'package/tsconfig.json'],
      },
      node: {
        project: ['tsconfig.json', 'package/tsconfig.json'],
        extensions: ['.vue', '.js', '.json'],
      },
    },
    'import/extensions': 'off',
    'import/prefer-default-export': 'off',
  },
  rules: {
    'no-console': 'warn',
    'no-debugger': 'warn',
    'vue/require-default-prop': 'off',
    'comma-dangle': ['error', 'only-multiline'],
    curly: [1, 'multi-line'],
    semi: 0,
    'vue/singleline-html-element-content-newline': [
      'error',
      {
        ignoreWhenNoAttributes: true,
        ignoreWhenEmpty: true,
        ignores: [
          'pre',
          'textarea',
          'h1',
          'h2',
          'h3',
          'h4',
          'h5',
          'a',
          'b',
          'p',
          'li',
          'slot',
          'template',
        ],
      },
    ],
    'vue/no-undef-components': ['error', { ignorePatterns: ['router-link', 'router-view'] }],
    'vue/require-explicit-emits': ['error', { allowProps: false }],
    'vue/attributes-order': [
      'error',
      {
        order: [
          'CONDITIONALS',
          'LIST_RENDERING',
          'DEFINITION',
          ['UNIQUE', 'SLOT'],
          'RENDER_MODIFIERS',
          'GLOBAL',
          'TWO_WAY_BINDING',
          'OTHER_DIRECTIVES',
          ['OTHER_ATTR', 'EVENTS'],
          'CONTENT',
        ],
        alphabetical: false,
      },
    ],
    'vue/component-tags-order': ['error', { order: ['template', 'script', 'style'] }],
    'vue/no-v-model-argument': 'off',
    'vue/html-self-closing': 'off',
    'vue/no-v-for-template-key': 'off',
    'vue/multi-word-component-names': 'off',
    'vue/script-setup-uses-vars': 'error',
    'vue/require-prop-types': 'error',
    'vue/require-valid-default-prop': 'error',
    'vue/no-unused-properties': 1,
    'vue/no-unused-refs': 'error',
    'vue/no-useless-mustaches': 'error',
    'vue/no-useless-v-bind': 'error',
    'vue/no-v-text': 'error',
    'vue/padding-line-between-blocks': 1,
    'vue/prefer-separate-static-class': 1,
    'vue/prefer-true-attribute-shorthand': 1,
    'vue/no-undef-properties': 'error',
    'no-extend-native': 'off',
    'space-in-parens': 1,
    'no-unused-vars': 1,
    'padding-line-between-statements': [
      'error',
      { blankLine: 'always', prev: ['const', 'let', 'var'], next: '*' },
      { blankLine: 'any', prev: ['const', 'let', 'var'], next: ['const', 'let', 'var'] },
      { blankLine: 'any', prev: ['case', 'default'], next: 'break' },
      { blankLine: 'any', prev: 'case', next: 'case' },
      { blankLine: 'always', prev: '*', next: 'return' },
      { blankLine: 'always', prev: 'block', next: '*' },
      { blankLine: 'always', prev: '*', next: 'block' },
      { blankLine: 'always', prev: 'block-like', next: '*' },
      { blankLine: 'always', prev: '*', next: 'block-like' },
      { blankLine: 'always', prev: ['import'], next: ['const', 'let', 'var'] },
    ],
  },
}
